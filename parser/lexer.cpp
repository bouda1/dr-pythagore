/* Generated by re2c 0.14.3 on Mon Dec 28 17:45:19 2015 */
#line 1 "/home/david/Projets/dr-pythagore/parser/lexer.re"
#include <iostream>
#include <cstring>
#include <malloc.h>
#include "lexer.h"
#include "grammar.h"

using namespace std;

DPLexer::DPLexer(const DPPlan &plan)
    : _content(0), _plan(plan), _token(_plan), _start(0), _limit(0)
{
    _parser = dPParseAlloc(malloc);
}

DPLexer::~DPLexer()
{
    dPParseFree(_parser, free);
}

char *DPLexer::getTokenValue()
{
    return strndup(_start, _cursor - _start);
}

void DPLexer::debug(int a, char b)
{
    cout << "DEBUG " << a << " ; " << b << endl;
    cout << "_start = " << _start << endl;
}

int DPLexer::scan()
{
    _start = _cursor;
#define YYCTYPE char
#define YYCURSOR _cursor
#define YYLIMIT _limit
#define YYMARKER _marker
#define YYCTXMARKER _ctxmarker
#define YYFILL(n)
#define YYDEBUG(a,b) debug(a, b)

cont:
    
#line 47 "/home/david/Projets/dr-pythagore/parser/lexer.cpp"
{
	YYCTYPE yych;

	yych = *YYCURSOR;
	switch (yych) {
	case 0x00:	goto yy3;
	case ' ':	goto yy32;
	case '!':	goto yy31;
	case '(':	goto yy16;
	case ')':	goto yy20;
	case '+':	goto yy12;
	case '-':	goto yy14;
	case '/':	goto yy30;
	case ':':	goto yy24;
	case '=':	goto yy26;
	case '?':	goto yy28;
	case 'A':	goto yy9;
	case 'B':
	case 'C':
	case 'D':
	case 'E':
	case 'F':
	case 'G':
	case 'H':
	case 'J':
	case 'K':
	case 'M':
	case 'N':
	case 'O':
	case 'Q':
	case 'R':
	case 'T':
	case 'U':
	case 'V':
	case 'W':
	case 'X':
	case 'Y':
	case 'Z':
	case 'a':
	case 'b':
	case 'c':
	case 'd':
	case 'e':
	case 'f':
	case 'g':
	case 'h':
	case 'i':
	case 'j':
	case 'k':
	case 'l':
	case 'm':
	case 'n':
	case 'o':
	case 'p':
	case 'q':
	case 'r':
	case 's':
	case 't':
	case 'u':
	case 'v':
	case 'w':
	case 'x':
	case 'y':
	case 'z':	goto yy11;
	case 'I':	goto yy10;
	case 'L':	goto yy5;
	case 'P':	goto yy7;
	case 'S':	goto yy8;
	case '[':	goto yy18;
	case ']':	goto yy22;
	default:	goto yy2;
	}
yy2:
	YYCURSOR = YYMARKER;
	goto yy6;
yy3:
	++YYCURSOR;
#line 46 "/home/david/Projets/dr-pythagore/parser/lexer.re"
	{ return CALC_TOKEN_END; }
#line 127 "/home/david/Projets/dr-pythagore/parser/lexer.cpp"
yy5:
	yych = *(YYMARKER = ++YYCURSOR);
	switch (yych) {
	case 'e':	goto yy59;
	case 'i':	goto yy58;
	default:	goto yy6;
	}
yy6:
#line 53 "/home/david/Projets/dr-pythagore/parser/lexer.re"
	{ return CALC_TOKEN_IDENT; }
#line 138 "/home/david/Projets/dr-pythagore/parser/lexer.cpp"
yy7:
	yych = *(YYMARKER = ++YYCURSOR);
	switch (yych) {
	case 'o':	goto yy53;
	default:	goto yy6;
	}
yy8:
	yych = *(YYMARKER = ++YYCURSOR);
	switch (yych) {
	case 'e':	goto yy46;
	default:	goto yy6;
	}
yy9:
	yych = *(YYMARKER = ++YYCURSOR);
	switch (yych) {
	case 's':	goto yy40;
	default:	goto yy6;
	}
yy10:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'n':	goto yy38;
	default:	goto yy6;
	}
yy11:
	yych = *++YYCURSOR;
	goto yy6;
yy12:
	++YYCURSOR;
#line 54 "/home/david/Projets/dr-pythagore/parser/lexer.re"
	{ return CALC_TOKEN_PLUS; }
#line 170 "/home/david/Projets/dr-pythagore/parser/lexer.cpp"
yy14:
	++YYCURSOR;
#line 55 "/home/david/Projets/dr-pythagore/parser/lexer.re"
	{ return CALC_TOKEN_MINUS; }
#line 175 "/home/david/Projets/dr-pythagore/parser/lexer.cpp"
yy16:
	++YYCURSOR;
#line 56 "/home/david/Projets/dr-pythagore/parser/lexer.re"
	{ return CALC_TOKEN_LPAR; }
#line 180 "/home/david/Projets/dr-pythagore/parser/lexer.cpp"
yy18:
	++YYCURSOR;
#line 57 "/home/david/Projets/dr-pythagore/parser/lexer.re"
	{ return CALC_TOKEN_LBRA; }
#line 185 "/home/david/Projets/dr-pythagore/parser/lexer.cpp"
yy20:
	++YYCURSOR;
#line 58 "/home/david/Projets/dr-pythagore/parser/lexer.re"
	{ return CALC_TOKEN_RPAR; }
#line 190 "/home/david/Projets/dr-pythagore/parser/lexer.cpp"
yy22:
	++YYCURSOR;
#line 59 "/home/david/Projets/dr-pythagore/parser/lexer.re"
	{ return CALC_TOKEN_RBRA; }
#line 195 "/home/david/Projets/dr-pythagore/parser/lexer.cpp"
yy24:
	++YYCURSOR;
#line 60 "/home/david/Projets/dr-pythagore/parser/lexer.re"
	{ return CALC_TOKEN_COLON; }
#line 200 "/home/david/Projets/dr-pythagore/parser/lexer.cpp"
yy26:
	++YYCURSOR;
#line 61 "/home/david/Projets/dr-pythagore/parser/lexer.re"
	{ return CALC_TOKEN_EQUALS; }
#line 205 "/home/david/Projets/dr-pythagore/parser/lexer.cpp"
yy28:
	++YYCURSOR;
#line 62 "/home/david/Projets/dr-pythagore/parser/lexer.re"
	{ return CALC_TOKEN_INTERRO; }
#line 210 "/home/david/Projets/dr-pythagore/parser/lexer.cpp"
yy30:
	yych = *++YYCURSOR;
	switch (yych) {
	case '/':	goto yy36;
	default:	goto yy2;
	}
yy31:
	yych = *++YYCURSOR;
	switch (yych) {
	case '=':	goto yy34;
	default:	goto yy2;
	}
yy32:
	++YYCURSOR;
#line 65 "/home/david/Projets/dr-pythagore/parser/lexer.re"
	{ _start++; goto cont; }
#line 227 "/home/david/Projets/dr-pythagore/parser/lexer.cpp"
yy34:
	++YYCURSOR;
#line 64 "/home/david/Projets/dr-pythagore/parser/lexer.re"
	{ return CALC_TOKEN_DISTINCT; }
#line 232 "/home/david/Projets/dr-pythagore/parser/lexer.cpp"
yy36:
	++YYCURSOR;
#line 63 "/home/david/Projets/dr-pythagore/parser/lexer.re"
	{ return CALC_TOKEN_PARALLEL; }
#line 237 "/home/david/Projets/dr-pythagore/parser/lexer.cpp"
yy38:
	++YYCURSOR;
#line 52 "/home/david/Projets/dr-pythagore/parser/lexer.re"
	{ return CALC_TOKEN_IN; }
#line 242 "/home/david/Projets/dr-pythagore/parser/lexer.cpp"
yy40:
	yych = *++YYCURSOR;
	switch (yych) {
	case 's':	goto yy41;
	default:	goto yy2;
	}
yy41:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'u':	goto yy42;
	default:	goto yy2;
	}
yy42:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'm':	goto yy43;
	default:	goto yy2;
	}
yy43:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'e':	goto yy44;
	default:	goto yy2;
	}
yy44:
	++YYCURSOR;
#line 51 "/home/david/Projets/dr-pythagore/parser/lexer.re"
	{ return CALC_TOKEN_ASSUME; }
#line 271 "/home/david/Projets/dr-pythagore/parser/lexer.cpp"
yy46:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'g':	goto yy47;
	default:	goto yy2;
	}
yy47:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'm':	goto yy48;
	default:	goto yy2;
	}
yy48:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'e':	goto yy49;
	default:	goto yy2;
	}
yy49:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'n':	goto yy50;
	default:	goto yy2;
	}
yy50:
	yych = *++YYCURSOR;
	switch (yych) {
	case 't':	goto yy51;
	default:	goto yy2;
	}
yy51:
	++YYCURSOR;
#line 50 "/home/david/Projets/dr-pythagore/parser/lexer.re"
	{ return CALC_TOKEN_SEGMENT; }
#line 306 "/home/david/Projets/dr-pythagore/parser/lexer.cpp"
yy53:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'i':	goto yy54;
	default:	goto yy2;
	}
yy54:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'n':	goto yy55;
	default:	goto yy2;
	}
yy55:
	yych = *++YYCURSOR;
	switch (yych) {
	case 't':	goto yy56;
	default:	goto yy2;
	}
yy56:
	++YYCURSOR;
#line 48 "/home/david/Projets/dr-pythagore/parser/lexer.re"
	{ return CALC_TOKEN_POINT; }
#line 329 "/home/david/Projets/dr-pythagore/parser/lexer.cpp"
yy58:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'n':	goto yy62;
	default:	goto yy2;
	}
yy59:
	yych = *++YYCURSOR;
	switch (yych) {
	case 't':	goto yy60;
	default:	goto yy2;
	}
yy60:
	++YYCURSOR;
#line 47 "/home/david/Projets/dr-pythagore/parser/lexer.re"
	{ return CALC_TOKEN_LET; }
#line 346 "/home/david/Projets/dr-pythagore/parser/lexer.cpp"
yy62:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'e':	goto yy63;
	default:	goto yy2;
	}
yy63:
	++YYCURSOR;
#line 49 "/home/david/Projets/dr-pythagore/parser/lexer.re"
	{ return CALC_TOKEN_LINE; }
#line 357 "/home/david/Projets/dr-pythagore/parser/lexer.cpp"
}
#line 66 "/home/david/Projets/dr-pythagore/parser/lexer.re"

}

void DPLexer::parse(const char *s)
{
    char *word;
    int op_token;
    _content = s;
    _start = _cursor = _content;
    _limit = _content + strlen(_content);

    do {
        op_token = scan();
        word = getTokenValue();
        dPParse(_parser, op_token, word, &_token);
    }
    while (!_token.onError() && op_token != CALC_TOKEN_END);

    if (!_token.onError())
        dPParse(_parser, 0, NULL, &_token);

}

bool DPLexer::getResult() const
{
    return _token.getResult();
}

